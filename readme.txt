Это бот для поиска отеля, он использует бесплатное API Hotels.com
По команде /fillform бот просит ввести название региона в котором будет вести поиск отеля.
Далее на выбор предлагается список регионов с похожими названиями.
После чего необходимо заполнить, поля запроса: даты заезда/отъезда, количество туристов и возраст детей.
После того как запрос сформирован будет произведена попытка найти доступные отели и если такие есть,
то бот выведет список этих отелей и предложит выбрать.
Этот список можно сортировать по возрастанию цены, убыванию цены и по агрегатному значению
минимальная цена плюс минимальное расстояние от центра выбранного ранее региона.
Выбираем отель. Получаем подробности этого отеля с фотографиями количество которых можно выбрать.
Для каждого пользователя бот хранит конфигурацию в БД: количество результатов в поиске,
количество фотографий и длину истории. Вся история для каждого пользователя храниться в БД.

Для экономии количества обращений к сайту (лимит = 500), ответы на запросы пишутся в файлы в папку json_data.
При повторном выборе информация берется из файла. Фотографии пишутся/берутся из папки hotels_images.
В консоль выводится остаток запросов.

.\
main.py                 точка входа в бота
constants.py            здесь собраны все константы
settingsAPI.py          для создания и хранения настроек запросов к API Hotels.com.
history_bot.db          БД Sqlite3, с двумя таблицами, история и конфигурации.
init_site_api.py        создается класс SiteApi(BaseModel), экземпляры которого формируют
                        и отправляют уже готовые запросы к серверу Hotels.com

..\site_api
place.py                логика работы с поиском региона
hotels.py               логика работы с поиском отеля в указанном регионе
summary.py              логика работы с информацией для указанного отеля

..\bot
handlers                пакет содержит все хэндлеры
    commands_bot.py     хэндлеры для команд
    machine_bot.py      хэндлеры для всей остальной логики
keyboards               пакет содержит все клавиатуры
config.py               константы для работы с ботом
define_bot.py           инициализация бота и функции непосредственного обращения к боту

..\db
db_config.py            создание и методы работы с БД.


Развитие:
Добавить многоязычность и хранить для каждого пользователя в его конфигурации.
Чтобы не утомлять пользователя вводом данных(количество взрослых, детей), их тоже можно хранить в конфигураторе,
также даты заезда и отъезда можно брать текущая дата +1 недели, как сейчас сделано в подсказке выбора дат.
Сообщения делать более строгие с помощью шаблонов, например Jinja2.
Нужны дополнительные фильтры для отелей, например ценовая категория, кто-то ищет хилтоны, кто-то хостелы.
Если найден отель мечты, то формировать ссылку с параметрами и переводить на сайт, где можно этот отель забронировать.
Если накопилась "длинная" история, то можно создать профиль предпочтений для пользователя
и искать отели на основе этого профиля.